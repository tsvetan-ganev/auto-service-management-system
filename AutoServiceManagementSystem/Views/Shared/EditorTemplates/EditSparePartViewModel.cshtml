@model AutoServiceManagementSystem.ViewModels.Jobs.EditSparePartViewModel

<div class="form-group form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-4">
        @Html.LabelFor(model => model.Name)
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(model => model.Code)
        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "Code" } })
        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.Label("Supplier")
        <p>
            @Html.EditorFor(model => model.Suppliers)
        </p>
    </div>
    <div class="col-md-1">
        @Html.LabelFor(model => model.Quantity)
        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Quantity", value = "" } })
        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
    </div>
    <div class="col-md-2">
        @Html.LabelFor(model => model.Price)
        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Price", value = "" } })
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>
</div>
<hr />

<script>
    //document.onload( function ()
    //{
    //    $.validator.methods.range = function ( value, element, param )
    //    {
    //        var globalizedValue = value.replace( ",", "." );
    //        return this.optional( element ) || ( globalizedValue >= param[0] && globalizedValue <= param[1] );
    //    };

    //    $.validator.methods.number = function ( value, element )
    //    {
    //        return this.optional( element ) || /^-?(?:d+|d{1,3}(?:[s.,]d{3})+)(?:[.,]d+)?$/.test( value );
    //    };
    //})
</script>

